     1                                  
     2                                  ;           p1q1.asm
     3                                  ;
     4                                  ;           RUN:      Linux
     5                                  ;           ASSEMBLE: nasm -l p1q1.lst -f elf p1q1.asm
     6                                  ;           LINK:     ld -m elf_i386 -o p1q1 p1q1.o
     7                                  ;
     8                                  ;
     9                                  
    10                                  ; Equivalent statements
    11                                  
    12                                  ; Data segment
    13                                  SECTION .data
    14                                  
    15                                  ; Un-initialized data segment
    16                                  SECTION .bss
    17                                  
    18                                  ; Code segment
    19                                  SECTION .text
    20                                  GLOBAL _function1
    21                                  
    22                                  _function1:
    23                                  	; Just some random code
    24                                  
    25 00000000 55                      	push ebp
    26 00000001 89E5                    	mov ebp, esp
    27                                  	
    28 00000003 8B7508                  	mov esi, [ebp + 8]
    29 00000006 8B7D0C                  	mov edi, [ebp + 12]
    30                                  
    31 00000009 B95D000000              	mov ecx, 0000005Dh ; 93 decimal
    32 0000000E BA00000000              	mov edx, 00000000h ; 
    33                                  
    34                                  .loop:
    35 00000013 BA00000000              	mov edx, 0h 	; clearing edx/dx/dh/dl register
    36 00000018 66B80000                	mov ax, 0h
    37 0000001C 8A06                    	mov al, [esi]
    38 0000001E 6698                    	cbw 
    39 00000020 6689C3                  	mov bx, ax
    40 00000023 8A4601                  	mov al, byte [esi + 1]
    41 00000026 6698                    	cbw
    42                                  	add bl, ax
    43          ******************       error: invalid combination of opcode and operands
    44 00000028 8A4602                  	mov al, byte [esi + 2]
    45 0000002B 6698                    	cbw
    46                                  	add bl, ax
    47          ******************       error: invalid combination of opcode and operands
    48 0000002D 8A4603                  	mov al, byte [esi + 3]
    49 00000030 6698                    	cbw
    50                                  	add bl, ax
    51          ******************       error: invalid combination of opcode and operands
    52 00000032 8A4604                  	mov al, byte [esi + 4]
    53 00000035 6698                    	cbw
    54                                  	add bl, ax
    55          ******************       error: invalid combination of opcode and operands
    56 00000037 8A4605                  	mov al, byte [esi + 5]
    57 0000003A 6698                    	cbw
    58                                  	add bl, ax
    59          ******************       error: invalid combination of opcode and operands
    60 0000003C 8A4606                  	mov al, byte [esi + 6]
    61 0000003F 6698                    	cbw
    62                                  	add bl, ax
    63          ******************       error: invalid combination of opcode and operands
    64 00000041 8A4607                  	mov al, byte [esi + 7]
    65 00000044 6698                    	cbw
    66                                  	add bl, ax
    67          ******************       error: invalid combination of opcode and operands
    68                                  	
    69                                  	
    70 00000046 66BB0800                	mov bx, 08h
    71 0000004A 66BA0000                	mov dx, 00h
    72 0000004E 66F7FB                  	idiv bx
    73 00000051 6689470E                	mov [edi + 14], ax 
    74 00000055 46                      	inc esi
    75 00000056 47                      	inc edi 
    76 00000057 47                      	inc edi
    77 00000058 E0B9                    	loopnz .loop
    78                                  
    79                                  	; Return
    80 0000005A 5D                      	pop ebp
    81 0000005B C3                      	ret
